import rodados.*
import dependencias.*

describe "group of tests for rodados" {
    const deportes = new Dependencia(cantidadEmpleados=45)
    const cultura = new Dependencia(cantidadEmpleados=31)
    const cachito= new Corsa(color="rojo")
    method initialize(){
    deportes.agregarAFlota(cachito)
    deportes.agregarAFlota(new Corsa(color="azul"))
    deportes.agregarAFlota(new Corsa(color="verde"))
    deportes.agregarAFlota(new Kwid(tieneTanqueAdicional=true))
    deportes.agregarAFlota(new Especial(capacidad=5,velocidadMaxima=160,peso=1200,color="beige"))
    cultura.agregarAFlota(cachito)
    cultura.agregarAFlota(new Kwid(tieneTanqueAdicional=true))
    cultura.agregarAFlota(new Kwid(tieneTanqueAdicional=true))
    cultura.agregarAFlota(new Kwid(tieneTanqueAdicional=false))
    trafic.interior(popular)
    trafic.motor(bataton)
    cultura.agregarAFlota(trafic)
  }
  test "peso total de la flota de deportes es 1300*3+1350+1200" {
    assert.equals(1300*3+1350+1200, deportes.pesoTotalFlota())
  }
  test "peso total de la flota de cultura es 1300+1350*2+1200+4000+1000+500"{
     assert.equals(1300+1350*2+1200+4000+1000+500,cultura.pesoTotalFlota())
  }
  test "deportes esta bien equipada"{
    assert.that(deportes.estaBienEquipada())
  }
  test "cultura no esta bien equipada"{
    assert.notThat(cultura.estaBienEquipada())
  }
  test "la capidad total de los rodados azules de deportes es "{
    assert.equals(7,deportes.capacidadTotalEnColor("azul"))
  }
  test "la capidad total de los rodados azules de cultura es "{
    assert.equals(10,cultura.capacidadTotalEnColor("azul"))
  }
}